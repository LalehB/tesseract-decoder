QUBIT_COORDS(0, 0) 0
QUBIT_COORDS(1, 1) 1
QUBIT_COORDS(2, 1) 2
QUBIT_COORDS(2, 3) 3
QUBIT_COORDS(3, 0) 4
QUBIT_COORDS(3, 2) 5
QUBIT_COORDS(3, 4) 6
QUBIT_COORDS(4, 0) 7
QUBIT_COORDS(4, 2) 8
QUBIT_COORDS(4, 4) 9
QUBIT_COORDS(4, 6) 10
QUBIT_COORDS(5, 1) 11
QUBIT_COORDS(5, 3) 12
QUBIT_COORDS(5, 5) 13
QUBIT_COORDS(5, 7) 14
QUBIT_COORDS(6, 1) 15
QUBIT_COORDS(6, 3) 16
QUBIT_COORDS(6, 5) 17
QUBIT_COORDS(6, 7) 18
QUBIT_COORDS(6, 9) 19
QUBIT_COORDS(7, 0) 20
QUBIT_COORDS(7, 2) 21
QUBIT_COORDS(7, 4) 22
QUBIT_COORDS(7, 6) 23
QUBIT_COORDS(7, 8) 24
QUBIT_COORDS(7, 10) 25
QUBIT_COORDS(8, 0) 26
QUBIT_COORDS(8, 2) 27
QUBIT_COORDS(8, 4) 28
QUBIT_COORDS(8, 6) 29
QUBIT_COORDS(8, 8) 30
QUBIT_COORDS(8, 10) 31
QUBIT_COORDS(8, 12) 32
QUBIT_COORDS(9, 1) 33
QUBIT_COORDS(9, 3) 34
QUBIT_COORDS(9, 5) 35
QUBIT_COORDS(9, 7) 36
QUBIT_COORDS(9, 9) 37
QUBIT_COORDS(9, 11) 38
QUBIT_COORDS(9, 13) 39
QUBIT_COORDS(10, 1) 40
QUBIT_COORDS(10, 3) 41
QUBIT_COORDS(10, 5) 42
QUBIT_COORDS(10, 7) 43
QUBIT_COORDS(10, 9) 44
QUBIT_COORDS(10, 11) 45
QUBIT_COORDS(10, 13) 46
QUBIT_COORDS(10, 15) 47
QUBIT_COORDS(11, 0) 48
QUBIT_COORDS(11, 2) 49
QUBIT_COORDS(11, 4) 50
QUBIT_COORDS(11, 6) 51
QUBIT_COORDS(11, 8) 52
QUBIT_COORDS(11, 10) 53
QUBIT_COORDS(11, 12) 54
QUBIT_COORDS(11, 14) 55
QUBIT_COORDS(11, 16) 56
QUBIT_COORDS(12, 0) 57
QUBIT_COORDS(12, 2) 58
QUBIT_COORDS(12, 4) 59
QUBIT_COORDS(12, 6) 60
QUBIT_COORDS(12, 8) 61
QUBIT_COORDS(12, 10) 62
QUBIT_COORDS(12, 12) 63
QUBIT_COORDS(12, 14) 64
QUBIT_COORDS(12, 16) 65
QUBIT_COORDS(12, 18) 66
QUBIT_COORDS(13, 1) 67
QUBIT_COORDS(13, 3) 68
QUBIT_COORDS(13, 5) 69
QUBIT_COORDS(13, 7) 70
QUBIT_COORDS(13, 9) 71
QUBIT_COORDS(13, 11) 72
QUBIT_COORDS(13, 13) 73
QUBIT_COORDS(13, 15) 74
QUBIT_COORDS(13, 17) 75
QUBIT_COORDS(13, 19) 76
QUBIT_COORDS(14, 1) 77
QUBIT_COORDS(14, 3) 78
QUBIT_COORDS(14, 5) 79
QUBIT_COORDS(14, 7) 80
QUBIT_COORDS(14, 9) 81
QUBIT_COORDS(14, 11) 82
QUBIT_COORDS(14, 13) 83
QUBIT_COORDS(14, 15) 84
QUBIT_COORDS(14, 17) 85
QUBIT_COORDS(14, 19) 86
QUBIT_COORDS(14, 21) 87
QUBIT_COORDS(15, 0) 88
QUBIT_COORDS(15, 2) 89
QUBIT_COORDS(15, 4) 90
QUBIT_COORDS(15, 6) 91
QUBIT_COORDS(15, 8) 92
QUBIT_COORDS(15, 10) 93
QUBIT_COORDS(15, 12) 94
QUBIT_COORDS(15, 14) 95
QUBIT_COORDS(15, 16) 96
QUBIT_COORDS(15, 18) 97
QUBIT_COORDS(15, 20) 98
QUBIT_COORDS(16, 0) 99
QUBIT_COORDS(16, 2) 100
QUBIT_COORDS(16, 4) 101
QUBIT_COORDS(16, 6) 102
QUBIT_COORDS(16, 8) 103
QUBIT_COORDS(16, 10) 104
QUBIT_COORDS(16, 12) 105
QUBIT_COORDS(16, 14) 106
QUBIT_COORDS(16, 16) 107
QUBIT_COORDS(16, 18) 108
QUBIT_COORDS(17, 1) 109
QUBIT_COORDS(17, 3) 110
QUBIT_COORDS(17, 5) 111
QUBIT_COORDS(17, 7) 112
QUBIT_COORDS(17, 9) 113
QUBIT_COORDS(17, 11) 114
QUBIT_COORDS(17, 13) 115
QUBIT_COORDS(17, 15) 116
QUBIT_COORDS(17, 17) 117
QUBIT_COORDS(18, 1) 118
QUBIT_COORDS(18, 3) 119
QUBIT_COORDS(18, 5) 120
QUBIT_COORDS(18, 7) 121
QUBIT_COORDS(18, 9) 122
QUBIT_COORDS(18, 11) 123
QUBIT_COORDS(18, 13) 124
QUBIT_COORDS(18, 15) 125
QUBIT_COORDS(19, 0) 126
QUBIT_COORDS(19, 2) 127
QUBIT_COORDS(19, 4) 128
QUBIT_COORDS(19, 6) 129
QUBIT_COORDS(19, 8) 130
QUBIT_COORDS(19, 10) 131
QUBIT_COORDS(19, 12) 132
QUBIT_COORDS(19, 14) 133
QUBIT_COORDS(20, 0) 134
QUBIT_COORDS(20, 2) 135
QUBIT_COORDS(20, 4) 136
QUBIT_COORDS(20, 6) 137
QUBIT_COORDS(20, 8) 138
QUBIT_COORDS(20, 10) 139
QUBIT_COORDS(20, 12) 140
QUBIT_COORDS(21, 1) 141
QUBIT_COORDS(21, 3) 142
QUBIT_COORDS(21, 5) 143
QUBIT_COORDS(21, 7) 144
QUBIT_COORDS(21, 9) 145
QUBIT_COORDS(21, 11) 146
QUBIT_COORDS(22, 1) 147
QUBIT_COORDS(22, 3) 148
QUBIT_COORDS(22, 5) 149
QUBIT_COORDS(22, 7) 150
QUBIT_COORDS(22, 9) 151
QUBIT_COORDS(23, 0) 152
QUBIT_COORDS(23, 2) 153
QUBIT_COORDS(23, 4) 154
QUBIT_COORDS(23, 6) 155
QUBIT_COORDS(23, 8) 156
QUBIT_COORDS(24, 0) 157
QUBIT_COORDS(24, 2) 158
QUBIT_COORDS(24, 4) 159
QUBIT_COORDS(24, 6) 160
QUBIT_COORDS(25, 1) 161
QUBIT_COORDS(25, 3) 162
QUBIT_COORDS(25, 5) 163
QUBIT_COORDS(26, 1) 164
QUBIT_COORDS(26, 3) 165
QUBIT_COORDS(27, 0) 166
QUBIT_COORDS(27, 2) 167
QUBIT_COORDS(28, 0) 168
MPP Z0*Z4*Z7*Z20*Z26*Z48*Z57*Z88*Z99*Z126*Z134*Z152*Z157*Z166*Z168 X0*X1*X2*X4 X1*X2*X3*X5 Z0*Z1*Z2*Z4 Z1*Z2*Z3*Z5 X2*X4*X5*X7*X8*X11 X3*X5*X6*X8*X9*X12 X6*X9*X10*X13 Z2*Z4*Z5*Z7*Z8*Z11 Z3*Z5*Z6*Z8*Z9*Z12 Z6*Z9*Z10*Z13 X7*X11*X15*X20 X8*X11*X12*X15*X16*X21 X9*X12*X13*X16*X17*X22 X10*X13*X14*X17*X18*X23 X14*X18*X19*X24 Z7*Z11*Z15*Z20 Z8*Z11*Z12*Z15*Z16*Z21 Z9*Z12*Z13*Z16*Z17*Z22 Z10*Z13*Z14*Z17*Z18*Z23 Z14*Z18*Z19*Z24 X15*X20*X21*X26*X27*X33 X16*X21*X22*X27*X28*X34 X17*X22*X23*X28*X29*X35 X18*X23*X24*X29*X30*X36 X19*X24*X25*X30*X31*X37 X25*X31*X32*X38 Z15*Z20*Z21*Z26*Z27*Z33 Z16*Z21*Z22*Z27*Z28*Z34 Z17*Z22*Z23*Z28*Z29*Z35 Z18*Z23*Z24*Z29*Z30*Z36 Z19*Z24*Z25*Z30*Z31*Z37 Z25*Z31*Z32*Z38 X26*X33*X40*X48 X27*X33*X34*X40*X41*X49 X28*X34*X35*X41*X42*X50 X29*X35*X36*X42*X43*X51 X30*X36*X37*X43*X44*X52 X31*X37*X38*X44*X45*X53 X32*X38*X39*X45*X46*X54 X39*X46*X47*X55 Z26*Z33*Z40*Z48 Z27*Z33*Z34*Z40*Z41*Z49 Z28*Z34*Z35*Z41*Z42*Z50 Z29*Z35*Z36*Z42*Z43*Z51 Z30*Z36*Z37*Z43*Z44*Z52 Z31*Z37*Z38*Z44*Z45*Z53 Z32*Z38*Z39*Z45*Z46*Z54 Z39*Z46*Z47*Z55 X40*X48*X49*X57*X58*X67 X41*X49*X50*X58*X59*X68 X42*X50*X51*X59*X60*X69 X43*X51*X52*X60*X61*X70 X44*X52*X53*X61*X62*X71 X45*X53*X54*X62*X63*X72 X46*X54*X55*X63*X64*X73 X47*X55*X56*X64*X65*X74 X56*X65*X66*X75 Z40*Z48*Z49*Z57*Z58*Z67 Z41*Z49*Z50*Z58*Z59*Z68 Z42*Z50*Z51*Z59*Z60*Z69 Z43*Z51*Z52*Z60*Z61*Z70 Z44*Z52*Z53*Z61*Z62*Z71 Z45*Z53*Z54*Z62*Z63*Z72 Z46*Z54*Z55*Z63*Z64*Z73 Z47*Z55*Z56*Z64*Z65*Z74 Z56*Z65*Z66*Z75 X57*X67*X77*X88 X58*X67*X68*X77*X78*X89 X59*X68*X69*X78*X79*X90 X60*X69*X70*X79*X80*X91 X61*X70*X71*X80*X81*X92 X62*X71*X72*X81*X82*X93 X63*X72*X73*X82*X83*X94 X64*X73*X74*X83*X84*X95 X65*X74*X75*X84*X85*X96 X66*X75*X76*X85*X86*X97 X76*X86*X87*X98 Z57*Z67*Z77*Z88 Z58*Z67*Z68*Z77*Z78*Z89 Z59*Z68*Z69*Z78*Z79*Z90 Z60*Z69*Z70*Z79*Z80*Z91 Z61*Z70*Z71*Z80*Z81*Z92 Z62*Z71*Z72*Z81*Z82*Z93 Z63*Z72*Z73*Z82*Z83*Z94 Z64*Z73*Z74*Z83*Z84*Z95 Z65*Z74*Z75*Z84*Z85*Z96 Z66*Z75*Z76*Z85*Z86*Z97 Z76*Z86*Z87*Z98 X77*X88*X89*X99*X100*X109 X78*X89*X90*X100*X101*X110 X79*X90*X91*X101*X102*X111 X80*X91*X92*X102*X103*X112 X81*X92*X93*X103*X104*X113 X82*X93*X94*X104*X105*X114 X83*X94*X95*X105*X106*X115 X84*X95*X96*X106*X107*X116 X85*X96*X97*X107*X108*X117 X86*X97*X98*X108 Z77*Z88*Z89*Z99*Z100*Z109 Z78*Z89*Z90*Z100*Z101*Z110 Z79*Z90*Z91*Z101*Z102*Z111 Z80*Z91*Z92*Z102*Z103*Z112 Z81*Z92*Z93*Z103*Z104*Z113 Z82*Z93*Z94*Z104*Z105*Z114 Z83*Z94*Z95*Z105*Z106*Z115 Z84*Z95*Z96*Z106*Z107*Z116 Z85*Z96*Z97*Z107*Z108*Z117 Z86*Z97*Z98*Z108 X99*X109*X118*X126 X100*X109*X110*X118*X119*X127 X101*X110*X111*X119*X120*X128 X102*X111*X112*X120*X121*X129 X103*X112*X113*X121*X122*X130 X104*X113*X114*X122*X123*X131 X105*X114*X115*X123*X124*X132 X106*X115*X116*X124*X125*X133 X107*X116*X117*X125 Z99*Z109*Z118*Z126 Z100*Z109*Z110*Z118*Z119*Z127 Z101*Z110*Z111*Z119*Z120*Z128 Z102*Z111*Z112*Z120*Z121*Z129 Z103*Z112*Z113*Z121*Z122*Z130 Z104*Z113*Z114*Z122*Z123*Z131 Z105*Z114*Z115*Z123*Z124*Z132 Z106*Z115*Z116*Z124*Z125*Z133 Z107*Z116*Z117*Z125 X118*X126*X127*X134*X135*X141 X119*X127*X128*X135*X136*X142 X120*X128*X129*X136*X137*X143 X121*X129*X130*X137*X138*X144 X122*X130*X131*X138*X139*X145 X123*X131*X132*X139*X140*X146 X124*X132*X133*X140 Z118*Z126*Z127*Z134*Z135*Z141 Z119*Z127*Z128*Z135*Z136*Z142 Z120*Z128*Z129*Z136*Z137*Z143 Z121*Z129*Z130*Z137*Z138*Z144 Z122*Z130*Z131*Z138*Z139*Z145 Z123*Z131*Z132*Z139*Z140*Z146 Z124*Z132*Z133*Z140 X134*X141*X147*X152 X135*X141*X142*X147*X148*X153 X136*X142*X143*X148*X149*X154 X137*X143*X144*X149*X150*X155 X138*X144*X145*X150*X151*X156 X139*X145*X146*X151 Z134*Z141*Z147*Z152 Z135*Z141*Z142*Z147*Z148*Z153 Z136*Z142*Z143*Z148*Z149*Z154 Z137*Z143*Z144*Z149*Z150*Z155 Z138*Z144*Z145*Z150*Z151*Z156 Z139*Z145*Z146*Z151 X147*X152*X153*X157*X158*X161 X148*X153*X154*X158*X159*X162 X149*X154*X155*X159*X160*X163 X150*X155*X156*X160 Z147*Z152*Z153*Z157*Z158*Z161 Z148*Z153*Z154*Z158*Z159*Z162 Z149*Z154*Z155*Z159*Z160*Z163 Z150*Z155*Z156*Z160 X157*X161*X164*X166 X158*X161*X162*X164*X165*X167 X159*X162*X163*X165 Z157*Z161*Z164*Z166 Z158*Z161*Z162*Z164*Z165*Z167 Z159*Z162*Z163*Z165 X164*X166*X167*X168 Z164*Z166*Z167*Z168
X_ERROR(0.130367) 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
OBSERVABLE_INCLUDE(0) rec[-169]
TICK
MPP Z0*Z4*Z7*Z20*Z26*Z48*Z57*Z88*Z99*Z126*Z134*Z152*Z157*Z166*Z168 X0*X1*X2*X4 X1*X2*X3*X5 Z0*Z1*Z2*Z4 Z1*Z2*Z3*Z5 X2*X4*X5*X7*X8*X11 X3*X5*X6*X8*X9*X12 X6*X9*X10*X13 Z2*Z4*Z5*Z7*Z8*Z11 Z3*Z5*Z6*Z8*Z9*Z12 Z6*Z9*Z10*Z13 X7*X11*X15*X20 X8*X11*X12*X15*X16*X21 X9*X12*X13*X16*X17*X22 X10*X13*X14*X17*X18*X23 X14*X18*X19*X24 Z7*Z11*Z15*Z20 Z8*Z11*Z12*Z15*Z16*Z21 Z9*Z12*Z13*Z16*Z17*Z22 Z10*Z13*Z14*Z17*Z18*Z23 Z14*Z18*Z19*Z24 X15*X20*X21*X26*X27*X33 X16*X21*X22*X27*X28*X34 X17*X22*X23*X28*X29*X35 X18*X23*X24*X29*X30*X36 X19*X24*X25*X30*X31*X37 X25*X31*X32*X38 Z15*Z20*Z21*Z26*Z27*Z33 Z16*Z21*Z22*Z27*Z28*Z34 Z17*Z22*Z23*Z28*Z29*Z35 Z18*Z23*Z24*Z29*Z30*Z36 Z19*Z24*Z25*Z30*Z31*Z37 Z25*Z31*Z32*Z38 X26*X33*X40*X48 X27*X33*X34*X40*X41*X49 X28*X34*X35*X41*X42*X50 X29*X35*X36*X42*X43*X51 X30*X36*X37*X43*X44*X52 X31*X37*X38*X44*X45*X53 X32*X38*X39*X45*X46*X54 X39*X46*X47*X55 Z26*Z33*Z40*Z48 Z27*Z33*Z34*Z40*Z41*Z49 Z28*Z34*Z35*Z41*Z42*Z50 Z29*Z35*Z36*Z42*Z43*Z51 Z30*Z36*Z37*Z43*Z44*Z52 Z31*Z37*Z38*Z44*Z45*Z53 Z32*Z38*Z39*Z45*Z46*Z54 Z39*Z46*Z47*Z55 X40*X48*X49*X57*X58*X67 X41*X49*X50*X58*X59*X68 X42*X50*X51*X59*X60*X69 X43*X51*X52*X60*X61*X70 X44*X52*X53*X61*X62*X71 X45*X53*X54*X62*X63*X72 X46*X54*X55*X63*X64*X73 X47*X55*X56*X64*X65*X74 X56*X65*X66*X75 Z40*Z48*Z49*Z57*Z58*Z67 Z41*Z49*Z50*Z58*Z59*Z68 Z42*Z50*Z51*Z59*Z60*Z69 Z43*Z51*Z52*Z60*Z61*Z70 Z44*Z52*Z53*Z61*Z62*Z71 Z45*Z53*Z54*Z62*Z63*Z72 Z46*Z54*Z55*Z63*Z64*Z73 Z47*Z55*Z56*Z64*Z65*Z74 Z56*Z65*Z66*Z75 X57*X67*X77*X88 X58*X67*X68*X77*X78*X89 X59*X68*X69*X78*X79*X90 X60*X69*X70*X79*X80*X91 X61*X70*X71*X80*X81*X92 X62*X71*X72*X81*X82*X93 X63*X72*X73*X82*X83*X94 X64*X73*X74*X83*X84*X95 X65*X74*X75*X84*X85*X96 X66*X75*X76*X85*X86*X97 X76*X86*X87*X98 Z57*Z67*Z77*Z88 Z58*Z67*Z68*Z77*Z78*Z89 Z59*Z68*Z69*Z78*Z79*Z90 Z60*Z69*Z70*Z79*Z80*Z91 Z61*Z70*Z71*Z80*Z81*Z92 Z62*Z71*Z72*Z81*Z82*Z93 Z63*Z72*Z73*Z82*Z83*Z94 Z64*Z73*Z74*Z83*Z84*Z95 Z65*Z74*Z75*Z84*Z85*Z96 Z66*Z75*Z76*Z85*Z86*Z97 Z76*Z86*Z87*Z98 X77*X88*X89*X99*X100*X109 X78*X89*X90*X100*X101*X110 X79*X90*X91*X101*X102*X111 X80*X91*X92*X102*X103*X112 X81*X92*X93*X103*X104*X113 X82*X93*X94*X104*X105*X114 X83*X94*X95*X105*X106*X115 X84*X95*X96*X106*X107*X116 X85*X96*X97*X107*X108*X117 X86*X97*X98*X108 Z77*Z88*Z89*Z99*Z100*Z109 Z78*Z89*Z90*Z100*Z101*Z110 Z79*Z90*Z91*Z101*Z102*Z111 Z80*Z91*Z92*Z102*Z103*Z112 Z81*Z92*Z93*Z103*Z104*Z113 Z82*Z93*Z94*Z104*Z105*Z114 Z83*Z94*Z95*Z105*Z106*Z115 Z84*Z95*Z96*Z106*Z107*Z116 Z85*Z96*Z97*Z107*Z108*Z117 Z86*Z97*Z98*Z108 X99*X109*X118*X126 X100*X109*X110*X118*X119*X127 X101*X110*X111*X119*X120*X128 X102*X111*X112*X120*X121*X129 X103*X112*X113*X121*X122*X130 X104*X113*X114*X122*X123*X131 X105*X114*X115*X123*X124*X132 X106*X115*X116*X124*X125*X133 X107*X116*X117*X125 Z99*Z109*Z118*Z126 Z100*Z109*Z110*Z118*Z119*Z127 Z101*Z110*Z111*Z119*Z120*Z128 Z102*Z111*Z112*Z120*Z121*Z129 Z103*Z112*Z113*Z121*Z122*Z130 Z104*Z113*Z114*Z122*Z123*Z131 Z105*Z114*Z115*Z123*Z124*Z132 Z106*Z115*Z116*Z124*Z125*Z133 Z107*Z116*Z117*Z125 X118*X126*X127*X134*X135*X141 X119*X127*X128*X135*X136*X142 X120*X128*X129*X136*X137*X143 X121*X129*X130*X137*X138*X144 X122*X130*X131*X138*X139*X145 X123*X131*X132*X139*X140*X146 X124*X132*X133*X140 Z118*Z126*Z127*Z134*Z135*Z141 Z119*Z127*Z128*Z135*Z136*Z142 Z120*Z128*Z129*Z136*Z137*Z143 Z121*Z129*Z130*Z137*Z138*Z144 Z122*Z130*Z131*Z138*Z139*Z145 Z123*Z131*Z132*Z139*Z140*Z146 Z124*Z132*Z133*Z140 X134*X141*X147*X152 X135*X141*X142*X147*X148*X153 X136*X142*X143*X148*X149*X154 X137*X143*X144*X149*X150*X155 X138*X144*X145*X150*X151*X156 X139*X145*X146*X151 Z134*Z141*Z147*Z152 Z135*Z141*Z142*Z147*Z148*Z153 Z136*Z142*Z143*Z148*Z149*Z154 Z137*Z143*Z144*Z149*Z150*Z155 Z138*Z144*Z145*Z150*Z151*Z156 Z139*Z145*Z146*Z151 X147*X152*X153*X157*X158*X161 X148*X153*X154*X158*X159*X162 X149*X154*X155*X159*X160*X163 X150*X155*X156*X160 Z147*Z152*Z153*Z157*Z158*Z161 Z148*Z153*Z154*Z158*Z159*Z162 Z149*Z154*Z155*Z159*Z160*Z163 Z150*Z155*Z156*Z160 X157*X161*X164*X166 X158*X161*X162*X164*X165*X167 X159*X162*X163*X165 Z157*Z161*Z164*Z166 Z158*Z161*Z162*Z164*Z165*Z167 Z159*Z162*Z163*Z165 X164*X166*X167*X168 Z164*Z166*Z167*Z168
OBSERVABLE_INCLUDE(0) rec[-169]
DETECTOR(1, 0, 0, 0) rec[-337] rec[-168]
DETECTOR(1, 2, 0, 2) rec[-336] rec[-167]
DETECTOR(2, 0, 0, 3) rec[-335] rec[-166]
DETECTOR(2, 2, 0, 5) rec[-334] rec[-165]
DETECTOR(3, 1, 0, 1) rec[-333] rec[-164]
DETECTOR(3, 3, 0, 0) rec[-332] rec[-163]
DETECTOR(3, 5, 0, 2) rec[-331] rec[-162]
DETECTOR(4, 1, 0, 4) rec[-330] rec[-161]
DETECTOR(4, 3, 0, 3) rec[-329] rec[-160]
DETECTOR(4, 5, 0, 5) rec[-328] rec[-159]
DETECTOR(5, 0, 0, 0) rec[-327] rec[-158]
DETECTOR(5, 2, 0, 2) rec[-326] rec[-157]
DETECTOR(5, 4, 0, 1) rec[-325] rec[-156]
DETECTOR(5, 6, 0, 0) rec[-324] rec[-155]
DETECTOR(5, 8, 0, 2) rec[-323] rec[-154]
DETECTOR(6, 0, 0, 3) rec[-322] rec[-153]
DETECTOR(6, 2, 0, 5) rec[-321] rec[-152]
DETECTOR(6, 4, 0, 4) rec[-320] rec[-151]
DETECTOR(6, 6, 0, 3) rec[-319] rec[-150]
DETECTOR(6, 8, 0, 5) rec[-318] rec[-149]
DETECTOR(7, 1, 0, 1) rec[-317] rec[-148]
DETECTOR(7, 3, 0, 0) rec[-316] rec[-147]
DETECTOR(7, 5, 0, 2) rec[-315] rec[-146]
DETECTOR(7, 7, 0, 1) rec[-314] rec[-145]
DETECTOR(7, 9, 0, 0) rec[-313] rec[-144]
DETECTOR(7, 11, 0, 2) rec[-312] rec[-143]
DETECTOR(8, 1, 0, 4) rec[-311] rec[-142]
DETECTOR(8, 3, 0, 3) rec[-310] rec[-141]
DETECTOR(8, 5, 0, 5) rec[-309] rec[-140]
DETECTOR(8, 7, 0, 4) rec[-308] rec[-139]
DETECTOR(8, 9, 0, 3) rec[-307] rec[-138]
DETECTOR(8, 11, 0, 5) rec[-306] rec[-137]
DETECTOR(9, 0, 0, 0) rec[-305] rec[-136]
DETECTOR(9, 2, 0, 2) rec[-304] rec[-135]
DETECTOR(9, 4, 0, 1) rec[-303] rec[-134]
DETECTOR(9, 6, 0, 0) rec[-302] rec[-133]
DETECTOR(9, 8, 0, 2) rec[-301] rec[-132]
DETECTOR(9, 10, 0, 1) rec[-300] rec[-131]
DETECTOR(9, 12, 0, 0) rec[-299] rec[-130]
DETECTOR(9, 14, 0, 2) rec[-298] rec[-129]
DETECTOR(10, 0, 0, 3) rec[-297] rec[-128]
DETECTOR(10, 2, 0, 5) rec[-296] rec[-127]
DETECTOR(10, 4, 0, 4) rec[-295] rec[-126]
DETECTOR(10, 6, 0, 3) rec[-294] rec[-125]
DETECTOR(10, 8, 0, 5) rec[-293] rec[-124]
DETECTOR(10, 10, 0, 4) rec[-292] rec[-123]
DETECTOR(10, 12, 0, 3) rec[-291] rec[-122]
DETECTOR(10, 14, 0, 5) rec[-290] rec[-121]
DETECTOR(11, 1, 0, 1) rec[-289] rec[-120]
DETECTOR(11, 3, 0, 0) rec[-288] rec[-119]
DETECTOR(11, 5, 0, 2) rec[-287] rec[-118]
DETECTOR(11, 7, 0, 1) rec[-286] rec[-117]
DETECTOR(11, 9, 0, 0) rec[-285] rec[-116]
DETECTOR(11, 11, 0, 2) rec[-284] rec[-115]
DETECTOR(11, 13, 0, 1) rec[-283] rec[-114]
DETECTOR(11, 15, 0, 0) rec[-282] rec[-113]
DETECTOR(11, 17, 0, 2) rec[-281] rec[-112]
DETECTOR(12, 1, 0, 4) rec[-280] rec[-111]
DETECTOR(12, 3, 0, 3) rec[-279] rec[-110]
DETECTOR(12, 5, 0, 5) rec[-278] rec[-109]
DETECTOR(12, 7, 0, 4) rec[-277] rec[-108]
DETECTOR(12, 9, 0, 3) rec[-276] rec[-107]
DETECTOR(12, 11, 0, 5) rec[-275] rec[-106]
DETECTOR(12, 13, 0, 4) rec[-274] rec[-105]
DETECTOR(12, 15, 0, 3) rec[-273] rec[-104]
DETECTOR(12, 17, 0, 5) rec[-272] rec[-103]
DETECTOR(13, 0, 0, 0) rec[-271] rec[-102]
DETECTOR(13, 2, 0, 2) rec[-270] rec[-101]
DETECTOR(13, 4, 0, 1) rec[-269] rec[-100]
DETECTOR(13, 6, 0, 0) rec[-268] rec[-99]
DETECTOR(13, 8, 0, 2) rec[-267] rec[-98]
DETECTOR(13, 10, 0, 1) rec[-266] rec[-97]
DETECTOR(13, 12, 0, 0) rec[-265] rec[-96]
DETECTOR(13, 14, 0, 2) rec[-264] rec[-95]
DETECTOR(13, 16, 0, 1) rec[-263] rec[-94]
DETECTOR(13, 18, 0, 0) rec[-262] rec[-93]
DETECTOR(13, 20, 0, 2) rec[-261] rec[-92]
DETECTOR(14, 0, 0, 3) rec[-260] rec[-91]
DETECTOR(14, 2, 0, 5) rec[-259] rec[-90]
DETECTOR(14, 4, 0, 4) rec[-258] rec[-89]
DETECTOR(14, 6, 0, 3) rec[-257] rec[-88]
DETECTOR(14, 8, 0, 5) rec[-256] rec[-87]
DETECTOR(14, 10, 0, 4) rec[-255] rec[-86]
DETECTOR(14, 12, 0, 3) rec[-254] rec[-85]
DETECTOR(14, 14, 0, 5) rec[-253] rec[-84]
DETECTOR(14, 16, 0, 4) rec[-252] rec[-83]
DETECTOR(14, 18, 0, 3) rec[-251] rec[-82]
DETECTOR(14, 20, 0, 5) rec[-250] rec[-81]
DETECTOR(15, 1, 0, 1) rec[-249] rec[-80]
DETECTOR(15, 3, 0, 0) rec[-248] rec[-79]
DETECTOR(15, 5, 0, 2) rec[-247] rec[-78]
DETECTOR(15, 7, 0, 1) rec[-246] rec[-77]
DETECTOR(15, 9, 0, 0) rec[-245] rec[-76]
DETECTOR(15, 11, 0, 2) rec[-244] rec[-75]
DETECTOR(15, 13, 0, 1) rec[-243] rec[-74]
DETECTOR(15, 15, 0, 0) rec[-242] rec[-73]
DETECTOR(15, 17, 0, 2) rec[-241] rec[-72]
DETECTOR(15, 19, 0, 1) rec[-240] rec[-71]
DETECTOR(16, 1, 0, 4) rec[-239] rec[-70]
DETECTOR(16, 3, 0, 3) rec[-238] rec[-69]
DETECTOR(16, 5, 0, 5) rec[-237] rec[-68]
DETECTOR(16, 7, 0, 4) rec[-236] rec[-67]
DETECTOR(16, 9, 0, 3) rec[-235] rec[-66]
DETECTOR(16, 11, 0, 5) rec[-234] rec[-65]
DETECTOR(16, 13, 0, 4) rec[-233] rec[-64]
DETECTOR(16, 15, 0, 3) rec[-232] rec[-63]
DETECTOR(16, 17, 0, 5) rec[-231] rec[-62]
DETECTOR(16, 19, 0, 4) rec[-230] rec[-61]
DETECTOR(17, 0, 0, 0) rec[-229] rec[-60]
DETECTOR(17, 2, 0, 2) rec[-228] rec[-59]
DETECTOR(17, 4, 0, 1) rec[-227] rec[-58]
DETECTOR(17, 6, 0, 0) rec[-226] rec[-57]
DETECTOR(17, 8, 0, 2) rec[-225] rec[-56]
DETECTOR(17, 10, 0, 1) rec[-224] rec[-55]
DETECTOR(17, 12, 0, 0) rec[-223] rec[-54]
DETECTOR(17, 14, 0, 2) rec[-222] rec[-53]
DETECTOR(17, 16, 0, 1) rec[-221] rec[-52]
DETECTOR(18, 0, 0, 3) rec[-220] rec[-51]
DETECTOR(18, 2, 0, 5) rec[-219] rec[-50]
DETECTOR(18, 4, 0, 4) rec[-218] rec[-49]
DETECTOR(18, 6, 0, 3) rec[-217] rec[-48]
DETECTOR(18, 8, 0, 5) rec[-216] rec[-47]
DETECTOR(18, 10, 0, 4) rec[-215] rec[-46]
DETECTOR(18, 12, 0, 3) rec[-214] rec[-45]
DETECTOR(18, 14, 0, 5) rec[-213] rec[-44]
DETECTOR(18, 16, 0, 4) rec[-212] rec[-43]
DETECTOR(19, 1, 0, 1) rec[-211] rec[-42]
DETECTOR(19, 3, 0, 0) rec[-210] rec[-41]
DETECTOR(19, 5, 0, 2) rec[-209] rec[-40]
DETECTOR(19, 7, 0, 1) rec[-208] rec[-39]
DETECTOR(19, 9, 0, 0) rec[-207] rec[-38]
DETECTOR(19, 11, 0, 2) rec[-206] rec[-37]
DETECTOR(19, 13, 0, 1) rec[-205] rec[-36]
DETECTOR(20, 1, 0, 4) rec[-204] rec[-35]
DETECTOR(20, 3, 0, 3) rec[-203] rec[-34]
DETECTOR(20, 5, 0, 5) rec[-202] rec[-33]
DETECTOR(20, 7, 0, 4) rec[-201] rec[-32]
DETECTOR(20, 9, 0, 3) rec[-200] rec[-31]
DETECTOR(20, 11, 0, 5) rec[-199] rec[-30]
DETECTOR(20, 13, 0, 4) rec[-198] rec[-29]
DETECTOR(21, 0, 0, 0) rec[-197] rec[-28]
DETECTOR(21, 2, 0, 2) rec[-196] rec[-27]
DETECTOR(21, 4, 0, 1) rec[-195] rec[-26]
DETECTOR(21, 6, 0, 0) rec[-194] rec[-25]
DETECTOR(21, 8, 0, 2) rec[-193] rec[-24]
DETECTOR(21, 10, 0, 1) rec[-192] rec[-23]
DETECTOR(22, 0, 0, 3) rec[-191] rec[-22]
DETECTOR(22, 2, 0, 5) rec[-190] rec[-21]
DETECTOR(22, 4, 0, 4) rec[-189] rec[-20]
DETECTOR(22, 6, 0, 3) rec[-188] rec[-19]
DETECTOR(22, 8, 0, 5) rec[-187] rec[-18]
DETECTOR(22, 10, 0, 4) rec[-186] rec[-17]
DETECTOR(23, 1, 0, 1) rec[-185] rec[-16]
DETECTOR(23, 3, 0, 0) rec[-184] rec[-15]
DETECTOR(23, 5, 0, 2) rec[-183] rec[-14]
DETECTOR(23, 7, 0, 1) rec[-182] rec[-13]
DETECTOR(24, 1, 0, 4) rec[-181] rec[-12]
DETECTOR(24, 3, 0, 3) rec[-180] rec[-11]
DETECTOR(24, 5, 0, 5) rec[-179] rec[-10]
DETECTOR(24, 7, 0, 4) rec[-178] rec[-9]
DETECTOR(25, 0, 0, 0) rec[-177] rec[-8]
DETECTOR(25, 2, 0, 2) rec[-176] rec[-7]
DETECTOR(25, 4, 0, 1) rec[-175] rec[-6]
DETECTOR(26, 0, 0, 3) rec[-174] rec[-5]
DETECTOR(26, 2, 0, 5) rec[-173] rec[-4]
DETECTOR(26, 4, 0, 4) rec[-172] rec[-3]
DETECTOR(27, 1, 0, 1) rec[-171] rec[-2]
DETECTOR(28, 1, 0, 4) rec[-170] rec[-1]
SHIFT_COORDS(0, 0, 1)
TICK
