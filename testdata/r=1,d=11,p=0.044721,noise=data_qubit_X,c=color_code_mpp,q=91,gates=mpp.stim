QUBIT_COORDS(0, 0) 0
QUBIT_COORDS(1, 1) 1
QUBIT_COORDS(2, 1) 2
QUBIT_COORDS(2, 3) 3
QUBIT_COORDS(3, 0) 4
QUBIT_COORDS(3, 2) 5
QUBIT_COORDS(3, 4) 6
QUBIT_COORDS(4, 0) 7
QUBIT_COORDS(4, 2) 8
QUBIT_COORDS(4, 4) 9
QUBIT_COORDS(4, 6) 10
QUBIT_COORDS(5, 1) 11
QUBIT_COORDS(5, 3) 12
QUBIT_COORDS(5, 5) 13
QUBIT_COORDS(5, 7) 14
QUBIT_COORDS(6, 1) 15
QUBIT_COORDS(6, 3) 16
QUBIT_COORDS(6, 5) 17
QUBIT_COORDS(6, 7) 18
QUBIT_COORDS(6, 9) 19
QUBIT_COORDS(7, 0) 20
QUBIT_COORDS(7, 2) 21
QUBIT_COORDS(7, 4) 22
QUBIT_COORDS(7, 6) 23
QUBIT_COORDS(7, 8) 24
QUBIT_COORDS(7, 10) 25
QUBIT_COORDS(8, 0) 26
QUBIT_COORDS(8, 2) 27
QUBIT_COORDS(8, 4) 28
QUBIT_COORDS(8, 6) 29
QUBIT_COORDS(8, 8) 30
QUBIT_COORDS(8, 10) 31
QUBIT_COORDS(8, 12) 32
QUBIT_COORDS(9, 1) 33
QUBIT_COORDS(9, 3) 34
QUBIT_COORDS(9, 5) 35
QUBIT_COORDS(9, 7) 36
QUBIT_COORDS(9, 9) 37
QUBIT_COORDS(9, 11) 38
QUBIT_COORDS(9, 13) 39
QUBIT_COORDS(10, 1) 40
QUBIT_COORDS(10, 3) 41
QUBIT_COORDS(10, 5) 42
QUBIT_COORDS(10, 7) 43
QUBIT_COORDS(10, 9) 44
QUBIT_COORDS(10, 11) 45
QUBIT_COORDS(10, 13) 46
QUBIT_COORDS(10, 15) 47
QUBIT_COORDS(11, 0) 48
QUBIT_COORDS(11, 2) 49
QUBIT_COORDS(11, 4) 50
QUBIT_COORDS(11, 6) 51
QUBIT_COORDS(11, 8) 52
QUBIT_COORDS(11, 10) 53
QUBIT_COORDS(11, 12) 54
QUBIT_COORDS(11, 14) 55
QUBIT_COORDS(12, 0) 56
QUBIT_COORDS(12, 2) 57
QUBIT_COORDS(12, 4) 58
QUBIT_COORDS(12, 6) 59
QUBIT_COORDS(12, 8) 60
QUBIT_COORDS(12, 10) 61
QUBIT_COORDS(12, 12) 62
QUBIT_COORDS(13, 1) 63
QUBIT_COORDS(13, 3) 64
QUBIT_COORDS(13, 5) 65
QUBIT_COORDS(13, 7) 66
QUBIT_COORDS(13, 9) 67
QUBIT_COORDS(13, 11) 68
QUBIT_COORDS(14, 1) 69
QUBIT_COORDS(14, 3) 70
QUBIT_COORDS(14, 5) 71
QUBIT_COORDS(14, 7) 72
QUBIT_COORDS(14, 9) 73
QUBIT_COORDS(15, 0) 74
QUBIT_COORDS(15, 2) 75
QUBIT_COORDS(15, 4) 76
QUBIT_COORDS(15, 6) 77
QUBIT_COORDS(15, 8) 78
QUBIT_COORDS(16, 0) 79
QUBIT_COORDS(16, 2) 80
QUBIT_COORDS(16, 4) 81
QUBIT_COORDS(16, 6) 82
QUBIT_COORDS(17, 1) 83
QUBIT_COORDS(17, 3) 84
QUBIT_COORDS(17, 5) 85
QUBIT_COORDS(18, 1) 86
QUBIT_COORDS(18, 3) 87
QUBIT_COORDS(19, 0) 88
QUBIT_COORDS(19, 2) 89
QUBIT_COORDS(20, 0) 90
MPP Z0*Z4*Z7*Z20*Z26*Z48*Z56*Z74*Z79*Z88*Z90 X0*X1*X2*X4 X1*X2*X3*X5 Z0*Z1*Z2*Z4 Z1*Z2*Z3*Z5 X2*X4*X5*X7*X8*X11 X3*X5*X6*X8*X9*X12 X6*X9*X10*X13 Z2*Z4*Z5*Z7*Z8*Z11 Z3*Z5*Z6*Z8*Z9*Z12 Z6*Z9*Z10*Z13 X7*X11*X15*X20 X8*X11*X12*X15*X16*X21 X9*X12*X13*X16*X17*X22 X10*X13*X14*X17*X18*X23 X14*X18*X19*X24 Z7*Z11*Z15*Z20 Z8*Z11*Z12*Z15*Z16*Z21 Z9*Z12*Z13*Z16*Z17*Z22 Z10*Z13*Z14*Z17*Z18*Z23 Z14*Z18*Z19*Z24 X15*X20*X21*X26*X27*X33 X16*X21*X22*X27*X28*X34 X17*X22*X23*X28*X29*X35 X18*X23*X24*X29*X30*X36 X19*X24*X25*X30*X31*X37 X25*X31*X32*X38 Z15*Z20*Z21*Z26*Z27*Z33 Z16*Z21*Z22*Z27*Z28*Z34 Z17*Z22*Z23*Z28*Z29*Z35 Z18*Z23*Z24*Z29*Z30*Z36 Z19*Z24*Z25*Z30*Z31*Z37 Z25*Z31*Z32*Z38 X26*X33*X40*X48 X27*X33*X34*X40*X41*X49 X28*X34*X35*X41*X42*X50 X29*X35*X36*X42*X43*X51 X30*X36*X37*X43*X44*X52 X31*X37*X38*X44*X45*X53 X32*X38*X39*X45*X46*X54 X39*X46*X47*X55 Z26*Z33*Z40*Z48 Z27*Z33*Z34*Z40*Z41*Z49 Z28*Z34*Z35*Z41*Z42*Z50 Z29*Z35*Z36*Z42*Z43*Z51 Z30*Z36*Z37*Z43*Z44*Z52 Z31*Z37*Z38*Z44*Z45*Z53 Z32*Z38*Z39*Z45*Z46*Z54 Z39*Z46*Z47*Z55 X40*X48*X49*X56*X57*X63 X41*X49*X50*X57*X58*X64 X42*X50*X51*X58*X59*X65 X43*X51*X52*X59*X60*X66 X44*X52*X53*X60*X61*X67 X45*X53*X54*X61*X62*X68 X46*X54*X55*X62 Z40*Z48*Z49*Z56*Z57*Z63 Z41*Z49*Z50*Z57*Z58*Z64 Z42*Z50*Z51*Z58*Z59*Z65 Z43*Z51*Z52*Z59*Z60*Z66 Z44*Z52*Z53*Z60*Z61*Z67 Z45*Z53*Z54*Z61*Z62*Z68 Z46*Z54*Z55*Z62 X56*X63*X69*X74 X57*X63*X64*X69*X70*X75 X58*X64*X65*X70*X71*X76 X59*X65*X66*X71*X72*X77 X60*X66*X67*X72*X73*X78 X61*X67*X68*X73 Z56*Z63*Z69*Z74 Z57*Z63*Z64*Z69*Z70*Z75 Z58*Z64*Z65*Z70*Z71*Z76 Z59*Z65*Z66*Z71*Z72*Z77 Z60*Z66*Z67*Z72*Z73*Z78 Z61*Z67*Z68*Z73 X69*X74*X75*X79*X80*X83 X70*X75*X76*X80*X81*X84 X71*X76*X77*X81*X82*X85 X72*X77*X78*X82 Z69*Z74*Z75*Z79*Z80*Z83 Z70*Z75*Z76*Z80*Z81*Z84 Z71*Z76*Z77*Z81*Z82*Z85 Z72*Z77*Z78*Z82 X79*X83*X86*X88 X80*X83*X84*X86*X87*X89 X81*X84*X85*X87 Z79*Z83*Z86*Z88 Z80*Z83*Z84*Z86*Z87*Z89 Z81*Z84*Z85*Z87 X86*X88*X89*X90 Z86*Z88*Z89*Z90
X_ERROR(0.044721) 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
OBSERVABLE_INCLUDE(0) rec[-91]
TICK
MPP Z0*Z4*Z7*Z20*Z26*Z48*Z56*Z74*Z79*Z88*Z90 X0*X1*X2*X4 X1*X2*X3*X5 Z0*Z1*Z2*Z4 Z1*Z2*Z3*Z5 X2*X4*X5*X7*X8*X11 X3*X5*X6*X8*X9*X12 X6*X9*X10*X13 Z2*Z4*Z5*Z7*Z8*Z11 Z3*Z5*Z6*Z8*Z9*Z12 Z6*Z9*Z10*Z13 X7*X11*X15*X20 X8*X11*X12*X15*X16*X21 X9*X12*X13*X16*X17*X22 X10*X13*X14*X17*X18*X23 X14*X18*X19*X24 Z7*Z11*Z15*Z20 Z8*Z11*Z12*Z15*Z16*Z21 Z9*Z12*Z13*Z16*Z17*Z22 Z10*Z13*Z14*Z17*Z18*Z23 Z14*Z18*Z19*Z24 X15*X20*X21*X26*X27*X33 X16*X21*X22*X27*X28*X34 X17*X22*X23*X28*X29*X35 X18*X23*X24*X29*X30*X36 X19*X24*X25*X30*X31*X37 X25*X31*X32*X38 Z15*Z20*Z21*Z26*Z27*Z33 Z16*Z21*Z22*Z27*Z28*Z34 Z17*Z22*Z23*Z28*Z29*Z35 Z18*Z23*Z24*Z29*Z30*Z36 Z19*Z24*Z25*Z30*Z31*Z37 Z25*Z31*Z32*Z38 X26*X33*X40*X48 X27*X33*X34*X40*X41*X49 X28*X34*X35*X41*X42*X50 X29*X35*X36*X42*X43*X51 X30*X36*X37*X43*X44*X52 X31*X37*X38*X44*X45*X53 X32*X38*X39*X45*X46*X54 X39*X46*X47*X55 Z26*Z33*Z40*Z48 Z27*Z33*Z34*Z40*Z41*Z49 Z28*Z34*Z35*Z41*Z42*Z50 Z29*Z35*Z36*Z42*Z43*Z51 Z30*Z36*Z37*Z43*Z44*Z52 Z31*Z37*Z38*Z44*Z45*Z53 Z32*Z38*Z39*Z45*Z46*Z54 Z39*Z46*Z47*Z55 X40*X48*X49*X56*X57*X63 X41*X49*X50*X57*X58*X64 X42*X50*X51*X58*X59*X65 X43*X51*X52*X59*X60*X66 X44*X52*X53*X60*X61*X67 X45*X53*X54*X61*X62*X68 X46*X54*X55*X62 Z40*Z48*Z49*Z56*Z57*Z63 Z41*Z49*Z50*Z57*Z58*Z64 Z42*Z50*Z51*Z58*Z59*Z65 Z43*Z51*Z52*Z59*Z60*Z66 Z44*Z52*Z53*Z60*Z61*Z67 Z45*Z53*Z54*Z61*Z62*Z68 Z46*Z54*Z55*Z62 X56*X63*X69*X74 X57*X63*X64*X69*X70*X75 X58*X64*X65*X70*X71*X76 X59*X65*X66*X71*X72*X77 X60*X66*X67*X72*X73*X78 X61*X67*X68*X73 Z56*Z63*Z69*Z74 Z57*Z63*Z64*Z69*Z70*Z75 Z58*Z64*Z65*Z70*Z71*Z76 Z59*Z65*Z66*Z71*Z72*Z77 Z60*Z66*Z67*Z72*Z73*Z78 Z61*Z67*Z68*Z73 X69*X74*X75*X79*X80*X83 X70*X75*X76*X80*X81*X84 X71*X76*X77*X81*X82*X85 X72*X77*X78*X82 Z69*Z74*Z75*Z79*Z80*Z83 Z70*Z75*Z76*Z80*Z81*Z84 Z71*Z76*Z77*Z81*Z82*Z85 Z72*Z77*Z78*Z82 X79*X83*X86*X88 X80*X83*X84*X86*X87*X89 X81*X84*X85*X87 Z79*Z83*Z86*Z88 Z80*Z83*Z84*Z86*Z87*Z89 Z81*Z84*Z85*Z87 X86*X88*X89*X90 Z86*Z88*Z89*Z90
OBSERVABLE_INCLUDE(0) rec[-91]
DETECTOR(1, 0, 0, 0) rec[-181] rec[-90]
DETECTOR(1, 2, 0, 2) rec[-180] rec[-89]
DETECTOR(2, 0, 0, 3) rec[-179] rec[-88]
DETECTOR(2, 2, 0, 5) rec[-178] rec[-87]
DETECTOR(3, 1, 0, 1) rec[-177] rec[-86]
DETECTOR(3, 3, 0, 0) rec[-176] rec[-85]
DETECTOR(3, 5, 0, 2) rec[-175] rec[-84]
DETECTOR(4, 1, 0, 4) rec[-174] rec[-83]
DETECTOR(4, 3, 0, 3) rec[-173] rec[-82]
DETECTOR(4, 5, 0, 5) rec[-172] rec[-81]
DETECTOR(5, 0, 0, 0) rec[-171] rec[-80]
DETECTOR(5, 2, 0, 2) rec[-170] rec[-79]
DETECTOR(5, 4, 0, 1) rec[-169] rec[-78]
DETECTOR(5, 6, 0, 0) rec[-168] rec[-77]
DETECTOR(5, 8, 0, 2) rec[-167] rec[-76]
DETECTOR(6, 0, 0, 3) rec[-166] rec[-75]
DETECTOR(6, 2, 0, 5) rec[-165] rec[-74]
DETECTOR(6, 4, 0, 4) rec[-164] rec[-73]
DETECTOR(6, 6, 0, 3) rec[-163] rec[-72]
DETECTOR(6, 8, 0, 5) rec[-162] rec[-71]
DETECTOR(7, 1, 0, 1) rec[-161] rec[-70]
DETECTOR(7, 3, 0, 0) rec[-160] rec[-69]
DETECTOR(7, 5, 0, 2) rec[-159] rec[-68]
DETECTOR(7, 7, 0, 1) rec[-158] rec[-67]
DETECTOR(7, 9, 0, 0) rec[-157] rec[-66]
DETECTOR(7, 11, 0, 2) rec[-156] rec[-65]
DETECTOR(8, 1, 0, 4) rec[-155] rec[-64]
DETECTOR(8, 3, 0, 3) rec[-154] rec[-63]
DETECTOR(8, 5, 0, 5) rec[-153] rec[-62]
DETECTOR(8, 7, 0, 4) rec[-152] rec[-61]
DETECTOR(8, 9, 0, 3) rec[-151] rec[-60]
DETECTOR(8, 11, 0, 5) rec[-150] rec[-59]
DETECTOR(9, 0, 0, 0) rec[-149] rec[-58]
DETECTOR(9, 2, 0, 2) rec[-148] rec[-57]
DETECTOR(9, 4, 0, 1) rec[-147] rec[-56]
DETECTOR(9, 6, 0, 0) rec[-146] rec[-55]
DETECTOR(9, 8, 0, 2) rec[-145] rec[-54]
DETECTOR(9, 10, 0, 1) rec[-144] rec[-53]
DETECTOR(9, 12, 0, 0) rec[-143] rec[-52]
DETECTOR(9, 14, 0, 2) rec[-142] rec[-51]
DETECTOR(10, 0, 0, 3) rec[-141] rec[-50]
DETECTOR(10, 2, 0, 5) rec[-140] rec[-49]
DETECTOR(10, 4, 0, 4) rec[-139] rec[-48]
DETECTOR(10, 6, 0, 3) rec[-138] rec[-47]
DETECTOR(10, 8, 0, 5) rec[-137] rec[-46]
DETECTOR(10, 10, 0, 4) rec[-136] rec[-45]
DETECTOR(10, 12, 0, 3) rec[-135] rec[-44]
DETECTOR(10, 14, 0, 5) rec[-134] rec[-43]
DETECTOR(11, 1, 0, 1) rec[-133] rec[-42]
DETECTOR(11, 3, 0, 0) rec[-132] rec[-41]
DETECTOR(11, 5, 0, 2) rec[-131] rec[-40]
DETECTOR(11, 7, 0, 1) rec[-130] rec[-39]
DETECTOR(11, 9, 0, 0) rec[-129] rec[-38]
DETECTOR(11, 11, 0, 2) rec[-128] rec[-37]
DETECTOR(11, 13, 0, 1) rec[-127] rec[-36]
DETECTOR(12, 1, 0, 4) rec[-126] rec[-35]
DETECTOR(12, 3, 0, 3) rec[-125] rec[-34]
DETECTOR(12, 5, 0, 5) rec[-124] rec[-33]
DETECTOR(12, 7, 0, 4) rec[-123] rec[-32]
DETECTOR(12, 9, 0, 3) rec[-122] rec[-31]
DETECTOR(12, 11, 0, 5) rec[-121] rec[-30]
DETECTOR(12, 13, 0, 4) rec[-120] rec[-29]
DETECTOR(13, 0, 0, 0) rec[-119] rec[-28]
DETECTOR(13, 2, 0, 2) rec[-118] rec[-27]
DETECTOR(13, 4, 0, 1) rec[-117] rec[-26]
DETECTOR(13, 6, 0, 0) rec[-116] rec[-25]
DETECTOR(13, 8, 0, 2) rec[-115] rec[-24]
DETECTOR(13, 10, 0, 1) rec[-114] rec[-23]
DETECTOR(14, 0, 0, 3) rec[-113] rec[-22]
DETECTOR(14, 2, 0, 5) rec[-112] rec[-21]
DETECTOR(14, 4, 0, 4) rec[-111] rec[-20]
DETECTOR(14, 6, 0, 3) rec[-110] rec[-19]
DETECTOR(14, 8, 0, 5) rec[-109] rec[-18]
DETECTOR(14, 10, 0, 4) rec[-108] rec[-17]
DETECTOR(15, 1, 0, 1) rec[-107] rec[-16]
DETECTOR(15, 3, 0, 0) rec[-106] rec[-15]
DETECTOR(15, 5, 0, 2) rec[-105] rec[-14]
DETECTOR(15, 7, 0, 1) rec[-104] rec[-13]
DETECTOR(16, 1, 0, 4) rec[-103] rec[-12]
DETECTOR(16, 3, 0, 3) rec[-102] rec[-11]
DETECTOR(16, 5, 0, 5) rec[-101] rec[-10]
DETECTOR(16, 7, 0, 4) rec[-100] rec[-9]
DETECTOR(17, 0, 0, 0) rec[-99] rec[-8]
DETECTOR(17, 2, 0, 2) rec[-98] rec[-7]
DETECTOR(17, 4, 0, 1) rec[-97] rec[-6]
DETECTOR(18, 0, 0, 3) rec[-96] rec[-5]
DETECTOR(18, 2, 0, 5) rec[-95] rec[-4]
DETECTOR(18, 4, 0, 4) rec[-94] rec[-3]
DETECTOR(19, 1, 0, 1) rec[-93] rec[-2]
DETECTOR(20, 1, 0, 4) rec[-92] rec[-1]
SHIFT_COORDS(0, 0, 1)
TICK
